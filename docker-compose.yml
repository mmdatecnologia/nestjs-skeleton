version: '3'
services:
  mongo:
    container_name: nosql
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'

  app:
    container_name: app
    dockerfile: Dockerfile
    restart: always
    command: bash -c "yarn start"
    environment:
      - MONGO_URL=mongodb://mongo:27017/app
    volumes:
      - ./:/usr/src/app/
    ports:
      - '5050:5050'
      - '9222:9222'
    links:
      - mongo

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
    environment:
      - 'cluster.routing.allocation.disk.threshold_enabled=false'
      - 'discovery.type=single-node'
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - 9200:9200
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9200']
      interval: 10s
      timeout: 5s
      retries: 3

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.7.1
    environment:
      - 'SERVER_HOST=0.0.0.0'
    ports:
      - 5601:5601
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5601']
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - elasticsearch

  apm-server:
    container_name: apm
    image: docker.elastic.co/apm/apm-server:7.7.1
    ports:
      - 8200:8200
    environment:
      - output.elasticsearch.hosts=['http://elasticsearch:9200']
      - apm-server.host="0.0.0.0:8200"
      - apm-server.secret_token="xxVpmQB2HMzCL9PgBHVrnxjNXXw5J7bd79DFm6sjBJR5HPXDhcF8MSb3vv4bpg44"
      - setup.kibana.host="kibana:5601"
      - setup.template.enabled=true
      - logging.to_files=false
    depends_on:
      - elasticsearch
      - kibana

  redis:
    image: redis
    container_name: redis
    ports:
      - '6379:6379'
    expose:
      - 6379
networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch-data:
  mongo-data:
